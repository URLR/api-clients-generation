# {{npmName}}@{{npmVersion}}

![NPM Version](https://img.shields.io/npm/v/urlr-js) ![NPM Downloads](https://img.shields.io/npm/dm/urlr-js) ![NPM License](https://img.shields.io/npm/l/urlr-js)

TypeScript/JavaScript client for URLR, the GDPR-compliant all-in-one platform for link shortening.

This SDK is automatically generated with the [OpenAPI Generator](https://openapi-generator.tech) project.

- API version: {{appVersion}}
- Package version: {{npmVersion}}
{{^hideGenerationTimestamp}}
- Build date: {{generatedDate}}
{{/hideGenerationTimestamp}}
- Build package: {{npmName}}

{{#infoUrl}}
For more information, please visit [{{{infoUrl}}}]({{{infoUrl}}})
{{/infoUrl}}

This generator creates TypeScript/JavaScript client that utilizes [Fetch API](https://fetch.spec.whatwg.org/). The generated Node module can be used in the following environments:

Environment
* Node.js
* Webpack
* Browserify

Language level
* ES5 - you must have a Promises/A+ library installed
* ES6

Module system
* CommonJS
* ES6 module system

It can be used in both TypeScript and JavaScript.

## Building

To build and compile the TypeScript sources to JavaScript use:
```
npm install
npm run build
```

## Installation

Navigate to the folder of your project and run one of the following commands:

### NPM

```
npm install {{npmName}}@{{npmVersion}}
```

### Yarn

```
yarn install {{npmName}}@{{npmVersion}}
```

## Getting Started

Please follow the [installation](#installation) procedure and then run the following code:

```javascript
import { Configuration, AccessTokensApi, LinksApi, StatisticsApi, WorkspacesApi } from "urlr-js"

const username = process.env.URLR_API_USERNAME; // to be defined on your side
const password = process.env.URLR_API_PASSWORD; // to be defined on your side

// Access Tokens

let configuration = new Configuration();

const accessTokensApi = new AccessTokensApi(configuration);
accessTokensApi.createAccessToken({
  createAccessTokenRequest: {
    username: username,
    password: password,
  }
}).then(function (data) {
  configuration = new Configuration({
    accessToken: data.token,
    basePath: baseUrl
  });

  // Create a link

  const linksApi = new LinksApi(configuration);
  linksApi.createLink({
    createLinkRequest: {
      url: '',
      teamId: '',
    }
  }).then(function (link) {
      console.log(link);
  }).catch((error) => console.error(error));
}).catch((error) => console.error(error));
```

A complete example is [available here](examples/example1.js).

## API Endpoints

All URIs are relative to *{{basePath}}*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}*{{classname}}* | **{{operationId}}** | **{{httpMethod}}** {{path}} | {{#summary}}{{summary}}{{/summary}}
{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}

## Authorization

{{^authMethods}}
All endpoints do not require authorization.
{{/authMethods}}
{{#authMethods}}
{{#last}} Authentication schemes defined for the API:{{/last}}
### {{{name}}}
{{#isApiKey}}

- **Type**: API key
- **API key parameter name**: {{{keyParamName}}}
- **Location**: {{#isKeyInQuery}}URL query string{{/isKeyInQuery}}{{#isKeyInHeader}}HTTP header{{/isKeyInHeader}}

{{/isApiKey}}
{{#isBasic}}
{{#isBasicBasic}}

- **Type**: HTTP basic authentication
{{/isBasicBasic}}
{{#isBasicBearer}}

- **Type**: Bearer authentication{{#bearerFormat}} ({{{.}}}){{/bearerFormat}}
{{/isBasicBearer}}
{{/isBasic}}
{{#isOAuth}}

- **Type**: `OAuth`
- **Flow**: `{{{flow}}}`
- **Authorization URL**: `{{{authorizationUrl}}}`
- **Scopes**: {{^scopes}}N/A{{/scopes}}
{{#scopes}}
    - **{{{scope}}}**: {{{description}}}
{{/scopes}}
{{/isOAuth}}

{{/authMethods}}

## Get help / support

Please contact [contact@urlr.me](mailto:contact@urlr.me?subject=[GitHub]%urlr-javascript) and we can take more direct action toward finding a solution.
